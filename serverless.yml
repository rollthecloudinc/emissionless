service: goclassifieds-api
custom:
  elasticUrl: https://i12sa6lx3y:v75zs8pgyd@classifieds-4537380016.us-east-1.bonsaisearch.net:443
provider:
  name: aws
  runtime: go1.x
  memorySize: 256
  timeout: 10
  websocketsApiName: goclassifieds-stream
  websocketsApiRouteSelectionExpression: $request.body.action # custom routes are selected by the value of the action property in the body
  httpApi:
    payload: '1.0'
    cors: true
    authorizers:
      cognito:
        identitySource: $request.header.Authorization
        issuerUrl: https://cognito-idp.us-east-1.amazonaws.com/us-east-1_z8PhK3D8V
        audience:
          - 3lkidn79q4jq8nahkecsguleij
package:
  individually: false
  include:
    - bazel-bin/api/entity/linux_amd64_pure_stripped/entity
    - bazel-bin/api/media/linux_amd64_pure_stripped/media
    - bazel-bin/api/proxy/linux_amd64_pure_stripped/proxy
    - bazel-bin/api/chat/linux_amd64_pure_stripped/chat
    - bazel-bin/api/user/linux_amd64_pure_stripped/user
    - bazel-bin/api/stream/linux_amd64_pure_stripped/stream
    - bazel-bin/api/authorizer/linux_amd64_pure_stripped/authorizer
    - bazel-bin/func/index_entity/linux_amd64_pure_stripped/index_entity
    - bazel-bin/func/validate_entity/linux_amd64_pure_stripped/validate_entity
    - bazel-bin/func/readable_profiles/linux_amd64_pure_stripped/readable_profiles
    - api/entity/types.json.tmpl
    - api/entity/queries.json.tmpl
    - api/chat/queries.tmpl
    - api/chat/AmazonRootCA1.pem
  exclude:
    - ./**
    - bazel-bin/api/entity/linux_amd64_pure_stripped/**
    - bazel-bin/api/media/linux_amd64_pure_stripped/**
    - bazel-bin/api/proxy/linux_amd64_pure_stripped/**
    - bazel-bin/api/chat/linux_amd64_pure_stripped/**
    - bazel-bin/api/user/linux_amd64_pure_stripped/**
    - bazel-bin/api/stream/linux_amd64_pure_stripped/**
    - bazel-bin/api/authorizer/linux_amd64_pure_stripped/**
    - bazel-bin/func/index_entity/linux_amd64_pure_stripped/**
    - bazel-bin/func/validate_entity/linux_amd64_pure_stripped/**
    - bazel-bin/func/readable_profiles/linux_amd64_pure_stripped/**
resources:
  Resources:
    EntityApiRole:
      Type: AWS::IAM::Role
      Properties:
        Path: "/"
        RoleName: "goclassifieds-entity-api-us-east-1-lambdaRole"
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole   
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        Policies:
          - PolicyName: goclassifieds-entity-api-lambda
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - logs:DescribeLogGroups
                    - logs:DescribeLogStreams
                    - logs:GetLogEvents
                    - logs:FilterLogEvents
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
                - Effect: "Allow"
                  Action:
                    - "s3:PutObject"
                    - "s3:GetObject"
                  Resource: "arn:aws:s3:::classifieds-ui-dev/*/*"
                - Effect: "Allow"
                  Action:
                    - "lambda:InvokeFunction"
                  Resource: "*"
                - Effect: "Allow"
                  Action:
                    - "cognito-idp:ListUsers"
                  Resource: "arn:aws:cognito-idp:us-east-1:989992233821:userpool/us-east-1_z8PhK3D8V"
                - Effect: "Allow"
                  Action:
                    - "execute-api:Invoke"
                    - "execute-api:ManageConnections"
                  Resource: "*"
functions:
  EntityApi:
    handler: bazel-bin/api/entity/linux_amd64_pure_stripped/entity
    role: EntityApiRole
    environment:
      ELASTIC_URL: ${self:custom.elasticUrl}
    events:
      - httpApi:
          path: /adprofileitems/{proxy+}
          method: GET
          authorizer:
            name: cognito
            scopes:
              - profiles_api/profiles_api
      - httpApi:
          path: /adtypes/{proxy+}
          method: GET
      - httpApi:
          path: /adlistitems/{proxy+}
          method: GET
      - httpApi:
          path: /featurelistitems/{proxy+}
          method: GET
      - httpApi:
          path: /ad/{id}
          method: GET
      - httpApi:
          path: /profile/{id}
          method: GET
      - httpApi:
          path: /adprofile/{id}
          method: GET
      - httpApi:
          path: /profilelistitems/{proxy+}
          method: GET
          authorizer:
            name: cognito
            scopes:
              - profiles_api/profiles_api
      - httpApi:
          path: /vocabulary/{id}
          method: GET
          authorizer:
            name: cognito
            scopes:
              - taxonomy_api/taxonomy_api
      - httpApi:
          path: /vocabularylistitems/{proxy+}
          method: GET
          authorizer:
            name: cognito
            scopes:
              - taxonomy_api/taxonomy_api
      - httpApi:
          path: /ad/{proxy+}
          method: POST
          authorizer:
            name: cognito
            scopes:
              - ads_api/ads_api
      - httpApi:
          path: /vocabulary/{proxy+}
          method: POST
          authorizer:
            name: cognito
            scopes:
              - taxonomy_api/taxonomy_api
      - httpApi:
          path: /profile/{proxy+}
          method: POST
          authorizer:
            name: cognito
            scopes:
              - profiles_api/profiles_api
  MediaApi:
    handler: bazel-bin/api/media/linux_amd64_pure_stripped/media
    role: EntityApiRole
    events:
      - httpApi:
          path: /media/{prefix}
          method: GET
      - httpApi:
          path: /media
          method: POST
          authorizer:
            name: cognito
            scopes:
              - media_api/media_api
  UserApi:
    handler: bazel-bin/api/user/linux_amd64_pure_stripped/user
    role: EntityApiRole
    events:
      - httpApi:
          path: /publicuserprofile/{id}
          method: GET
  ProxyApi:
    handler: bazel-bin/api/proxy/linux_amd64_pure_stripped/proxy
    role: EntityApiRole
    events:
      - httpApi:
          path: /cities/{country}/{state}/{city}
          method: GET
  ChatApi:
    handler: bazel-bin/api/chat/linux_amd64_pure_stripped/chat
    role: EntityApiRole
    events:
      - httpApi:
          path: /chatmessage/{proxy+}
          method: POST
          authorizer:
            name: cognito
            scopes:
              - chat/chat
      - httpApi:
          path: /chatconversations/{proxy+}
          method: GET
          authorizer:
            name: cognito
            scopes:
              - chat/chat
      - httpApi:
          path: /chatmessages/{proxy+}
          method: GET
          authorizer:
            name: cognito
            scopes:
              - chat/chat
      - httpApi:
          path: /lead/{proxy+}
          method: POST
      - httpApi:
          path: /leads/{proxy+}
          method: GET
          authorizer:
            name: cognito
            scopes:
              - ads_api/ads_api
              - profiles_api/profiles_api
      - httpApi:
          path: /page/{proxy+}
          method: POST
          authorizer:
            name: cognito
      - httpApi:
          path: /pages/{proxy+}
          method: GET
      - httpApi:
          path: /gridlayout/{proxy+}
          method: POST
          authorizer:
            name: cognito
  IndexEntity:
    handler: bazel-bin/func/index_entity/linux_amd64_pure_stripped/index_entity
    role: EntityApiRole
    environment:
      ELASTIC_URL: ${self:custom.elasticUrl}
    events:
      - s3:
          bucket: classifieds-ui-dev
          event: s3:ObjectCreated:*
          rules:
            - suffix: .json.gz
          existing: true
  ValidateEntity:
    handler: bazel-bin/func/validate_entity/linux_amd64_pure_stripped/validate_entity
    role: EntityApiRole
  ReadableProfiles:
    handler: bazel-bin/func/readable_profiles/linux_amd64_pure_stripped/readable_profiles
    role: EntityApiRole
  Stream:
    handler: bazel-bin/api/stream/linux_amd64_pure_stripped/stream
    role: EntityApiRole
    events:
      - websocket:
          route: $connect
          authorizer:
            name: Authorize
            identitySource:
              - 'route.request.querystring.token'
      - websocket:
          route: $disconnect
  Authorize:
    handler: bazel-bin/api/authorizer/linux_amd64_pure_stripped/authorizer