service: goclassifieds-api
custom:
  elasticUrl: https://i12sa6lx3y:v75zs8pgyd@classifieds-4537380016.us-east-1.bonsaisearch.net:443
provider:
  name: aws
  runtime: go1.x
  memorySize: 256
  timeout: 10
  httpApi:
    payload: '1.0'
    cors: true
    authorizers:
      cognito:
        identitySource: $request.header.Authorization
        issuerUrl: https://cognito-idp.us-east-1.amazonaws.com/us-east-1_z8PhK3D8V
        audience:
          - 3lkidn79q4jq8nahkecsguleij
package:
  individually: true
  exclude:
    - ./**
resources:
  Resources:
    EntityApiRole:
      Type: AWS::IAM::Role
      Properties:
        Path: "/"
        RoleName: "goclassifieds-entity-api-us-east-1-lambdaRole"
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole   
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        Policies:
          - PolicyName: goclassifieds-entity-api-lambda
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - logs:DescribeLogGroups
                    - logs:DescribeLogStreams
                    - logs:GetLogEvents
                    - logs:FilterLogEvents
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
                - Effect: "Allow"
                  Action:
                    - "s3:PutObject"
                    - "s3:GetObject"
                  Resource: "arn:aws:s3:::classifieds-ui-dev/*/*"
                - Effect: "Allow"
                  Action:
                    - "lambda:InvokeFunction"
                  Resource: "*"
functions:
  EntityApi:
    handler: bazel-bin/api/entity/linux_amd64_pure_stripped/entity
    role: EntityApiRole
    environment:
      ELASTIC_URL: ${self:custom.elasticUrl}
    package:
      include:
        - bazel-bin/api/entity/linux_amd64_pure_stripped/entity
        - api/entity/types.json.tmpl
        - api/entity/queries.json.tmpl
      exclude:
        - bazel-bin/api/entity/linux_amd64_pure_stripped/**
    events:
      - httpApi:
          path: /adprofileitems/{proxy+}
          method: GET
          authorizer:
            name: cognito
            scopes:
              - profiles_api/profiles_api
      - httpApi:
          path: /adtypes/{proxy+}
          method: GET
      - httpApi:
          path: /adlistitems/{proxy+}
          method: GET
      - httpApi:
          path: /ad/{id}
          method: GET
      - httpApi:
          path: /profile/{id}
          method: GET
      - httpApi:
          path: /profilelistitems/{proxy+}
          method: GET
          authorizer:
            name: cognito
            scopes:
              - profiles_api/profiles_api
      - httpApi:
          path: /vocabulary/{id}
          method: GET
          authorizer:
            name: cognito
            scopes:
              - taxonomy_api/taxonomy_api
      - httpApi:
          path: /vocabularylistitems/{proxy+}
          method: GET
          authorizer:
            name: cognito
            scopes:
              - taxonomy_api/taxonomy_api
      - httpApi:
          path: /ad/{proxy+}
          method: POST
          authorizer:
            name: cognito
            scopes:
              - ads_api/ads_api
      - httpApi:
          path: /vocabulary/{proxy+}
          method: POST
          authorizer:
            name: cognito
            scopes:
              - taxonomy_api/taxonomy_api
      - httpApi:
          path: /profile/{proxy+}
          method: POST
          authorizer:
            name: cognito
            scopes:
              - profiles_api/profiles_api
  MediaApi:
    handler: bazel-bin/api/media/linux_amd64_pure_stripped/media
    role: EntityApiRole
    package:
      include:
        - bazel-bin/api/media/linux_amd64_pure_stripped/media
      exclude:
        - bazel-bin/api/media/linux_amd64_pure_stripped/**
    events:
      - httpApi:
          path: /media/{prefix}
          method: GET
      - httpApi:
          path: /media
          method: POST
          authorizer:
            name: cognito
            scopes:
              - media_api/media_api
  ProxyApi:
    handler: bazel-bin/api/proxy/linux_amd64_pure_stripped/proxy
    role: EntityApiRole
    package:
      include:
        - bazel-bin/api/proxy/linux_amd64_pure_stripped/proxy
      exclude:
        - bazel-bin/api/proxy/linux_amd64_pure_stripped/**
    events:
      - httpApi:
          path: /cities/{country}/{state}/{city}
          method: GET
  IndexEntity:
    handler: bazel-bin/func/index_entity/linux_amd64_pure_stripped/index_entity
    role: EntityApiRole
    environment:
      ELASTIC_URL: ${self:custom.elasticUrl}
    package:
      include:
        - bazel-bin/func/index_entity/linux_amd64_pure_stripped/index_entity
      exclude:
        - bazel-bin/func/index_entity/linux_amd64_pure_stripped/**
    events:
      - s3:
          bucket: classifieds-ui-dev
          event: s3:ObjectCreated:*
          rules:
            - suffix: .json.gz
          existing: true

  ValidateEntity:
    handler: bazel-bin/func/validate_entity/linux_amd64_pure_stripped/validate_entity
    role: EntityApiRole
    package:
      include:
        - bazel-bin/func/validate_entity/linux_amd64_pure_stripped/validate_entity
      exclude:
        - bazel-bin/func/validate_entity/linux_amd64_pure_stripped/**
  ReadableProfiles:
    handler: bazel-bin/func/readable_profiles/linux_amd64_pure_stripped/readable_profiles
    role: EntityApiRole
    package:
      include:
        - bazel-bin/func/readable_profiles/linux_amd64_pure_stripped/readable_profiles
      exclude:
        - bazel-bin/func/readable_profiles/linux_amd64_pure_stripped/**
