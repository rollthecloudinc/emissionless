service: goclassifieds-api
provider:
  name: aws
  runtime: go1.x
  memorySize: 128
  timeout: 10
package:
  individually: true
  exclude:
    - ./**
  include:
    - bazel-bin/api/ads/linux_amd64_pure_stripped/**
    - bazel-bin/func/index_ad/linux_amd64_pure_stripped/**
resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    adsApiRole:
      Type: AWS::IAM::Role
      Properties:
        Path: "/"
        RoleName: "goclassifieds-ads-api-us-east-1-lambdaRole"
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole   
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        Policies:
          - PolicyName: goclassifieds-ads-api-lambda
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - logs:DescribeLogGroups
                    - logs:DescribeLogStreams
                    - logs:GetLogEvents
                    - logs:FilterLogEvents
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
                - Effect: "Allow"
                  Action:
                    - "s3:PutObject"
                  Resource: "arn:aws:s3:::classifieds-ui-dev/ads/*"
    indexAdFuncRole:
      Type: AWS::IAM::Role
      Properties:
        Path: "/"
        RoleName: "goclassifieds-index-ad-us-east-1-lambdaRole"
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole   
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        Policies:
          - PolicyName: goclassifieds-index-ad-lambda
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - logs:DescribeLogGroups
                    - logs:DescribeLogStreams
                    - logs:GetLogEvents
                    - logs:FilterLogEvents
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
                - Effect: "Allow"
                  Action:
                    - "s3:GetObject"
                  Resource: "arn:aws:s3:::classifieds-ui-dev/ads/*"
functions:
  ads-api:
    handler: bazel-bin/api/ads/linux_amd64_pure_stripped/ads
    role: adsApiRole
    package:
      include:
        - bazel-bin/api/ads/linux_amd64_pure_stripped/ads
      exclude:
        - bazel-bin/api/ads/linux_amd64_pure_stripped/**
    events:
      - http:
          path: /ads/ad
          method: POST
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:us-east-1:989992233821:userpool/us-east-1_z8PhK3D8V
            scopes:
              - ads_api/ads_api
      - http:
          path: /ads/{any+}
          method: any
          cors: true
  index-ad:
    handler: bazel-bin/func/index_ad/linux_amd64_pure_stripped/index_ad
    role: indexAdFuncRole
    package:
      include:
        - bazel-bin/func/index_ad/linux_amd64_pure_stripped/index_ad
      exclude:
        - bazel-bin/func/index_ad/linux_amd64_pure_stripped/**
    events:
      - s3:
          bucket: classifieds-ui-dev
          event: s3:ObjectCreated:*
          rules:
            - prefix: ads/
            - suffix: .json.gz
          existing: true